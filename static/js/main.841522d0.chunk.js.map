{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA/BR,SACEA,EACAF,EACAH,GAEA,IAAMM,EAAY,YAAOD,GAEzB,QAAQ,GACN,KAAKF,IAAaP,EAASW,SACzBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAKP,IAAaP,EAASgB,OACzBN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAW7C,OAJIb,GACFM,EAAaQ,UAGRR,EAOOS,CAAkBlB,EAAiBM,EAAUH,GAO3D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYf,IAAaP,EAASW,WACtCY,QAAS,kBAAMf,EAAYR,EAASW,WAJtC,iCASA,wBACEU,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYf,IAAaP,EAASgB,SACtCO,QAAS,kBAAMf,EAAYR,EAASgB,SAJtC,4BASA,wBACEK,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAAalB,IACjBmB,QAAS,WACPlB,GAAYD,IALhB,sBAWGG,IAAaP,EAASM,MAAQF,IAC7B,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAzCE,WACZf,EAAYR,EAASM,MACrBD,GAAW,IAoCH,sBAWN,6BACGI,EAAMe,KAAI,SAAAC,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCxGpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.841522d0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType:SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (true) {\n    case sortType === SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case sortType === SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => {\n            setReverse(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n        {\n          (sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {goods.map(good => <li key={good} data-cy=\"Good\">{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}